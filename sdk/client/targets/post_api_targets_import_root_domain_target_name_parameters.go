// Code generated by go-swagger; DO NOT EDIT.

package targets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"io"
	"net/http"
	"time"

	"bytes"
	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPostAPITargetsImportRootDomainTargetNameParams creates a new PostAPITargetsImportRootDomainTargetNameParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPostAPITargetsImportRootDomainTargetNameParams() *PostAPITargetsImportRootDomainTargetNameParams {
	return &PostAPITargetsImportRootDomainTargetNameParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPostAPITargetsImportRootDomainTargetNameParamsWithTimeout creates a new PostAPITargetsImportRootDomainTargetNameParams object
// with the ability to set a timeout on a request.
func NewPostAPITargetsImportRootDomainTargetNameParamsWithTimeout(timeout time.Duration) *PostAPITargetsImportRootDomainTargetNameParams {
	return &PostAPITargetsImportRootDomainTargetNameParams{
		timeout: timeout,
	}
}

// NewPostAPITargetsImportRootDomainTargetNameParamsWithContext creates a new PostAPITargetsImportRootDomainTargetNameParams object
// with the ability to set a context for a request.
func NewPostAPITargetsImportRootDomainTargetNameParamsWithContext(ctx context.Context) *PostAPITargetsImportRootDomainTargetNameParams {
	return &PostAPITargetsImportRootDomainTargetNameParams{
		Context: ctx,
	}
}

// NewPostAPITargetsImportRootDomainTargetNameParamsWithHTTPClient creates a new PostAPITargetsImportRootDomainTargetNameParams object
// with the ability to set a custom HTTPClient for a request.
func NewPostAPITargetsImportRootDomainTargetNameParamsWithHTTPClient(client *http.Client) *PostAPITargetsImportRootDomainTargetNameParams {
	return &PostAPITargetsImportRootDomainTargetNameParams{
		HTTPClient: client,
	}
}

/* PostAPITargetsImportRootDomainTargetNameParams contains all the parameters to send to the API endpoint
   for the post API targets import root domain target name operation.

   Typically these are written to a http.Request.
*/
type PostAPITargetsImportRootDomainTargetNameParams struct {

	// File.
	//
	// Format: binary
	File io.ReadCloser

	// TargetName.
	TargetName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the post API targets import root domain target name params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostAPITargetsImportRootDomainTargetNameParams) WithDefaults() *PostAPITargetsImportRootDomainTargetNameParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the post API targets import root domain target name params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostAPITargetsImportRootDomainTargetNameParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the post API targets import root domain target name params
func (o *PostAPITargetsImportRootDomainTargetNameParams) WithTimeout(timeout time.Duration) *PostAPITargetsImportRootDomainTargetNameParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post API targets import root domain target name params
func (o *PostAPITargetsImportRootDomainTargetNameParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post API targets import root domain target name params
func (o *PostAPITargetsImportRootDomainTargetNameParams) WithContext(ctx context.Context) *PostAPITargetsImportRootDomainTargetNameParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post API targets import root domain target name params
func (o *PostAPITargetsImportRootDomainTargetNameParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post API targets import root domain target name params
func (o *PostAPITargetsImportRootDomainTargetNameParams) WithHTTPClient(client *http.Client) *PostAPITargetsImportRootDomainTargetNameParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post API targets import root domain target name params
func (o *PostAPITargetsImportRootDomainTargetNameParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFile adds the file to the post API targets import root domain target name params
func (o *PostAPITargetsImportRootDomainTargetNameParams) WithFile(file io.ReadCloser) *PostAPITargetsImportRootDomainTargetNameParams {
	o.SetFile(file)
	return o
}

// SetFile adds the file to the post API targets import root domain target name params
func (o *PostAPITargetsImportRootDomainTargetNameParams) SetFile(file io.ReadCloser) {
	o.File = file
}

// WithTargetName adds the targetName to the post API targets import root domain target name params
func (o *PostAPITargetsImportRootDomainTargetNameParams) WithTargetName(targetName string) *PostAPITargetsImportRootDomainTargetNameParams {
	o.SetTargetName(targetName)
	return o
}

// SetTargetName adds the targetName to the post API targets import root domain target name params
func (o *PostAPITargetsImportRootDomainTargetNameParams) SetTargetName(targetName string) {
	o.TargetName = targetName
}

// WriteToRequest writes these params to a swagger request
func (o *PostAPITargetsImportRootDomainTargetNameParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.File != nil {

		// form param file
		var frFile io.ReadCloser
		buf := new(bytes.Buffer)
		if o.File != nil {
			buf.ReadFrom(frFile)
		}
		newStr := buf.String()
		if newStr != "" {
			if err := r.SetFormParam("file", newStr); err != nil {
				return err
			}
		}
	}

	// path param targetName
	if err := r.SetPathParam("targetName", o.TargetName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
