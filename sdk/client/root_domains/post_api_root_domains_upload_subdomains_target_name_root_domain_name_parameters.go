// Code generated by go-swagger; DO NOT EDIT.

package root_domains

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"io"
	"net/http"
	"time"

	"bytes"
	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPostAPIRootDomainsUploadSubdomainsTargetNameRootDomainNameParams creates a new PostAPIRootDomainsUploadSubdomainsTargetNameRootDomainNameParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPostAPIRootDomainsUploadSubdomainsTargetNameRootDomainNameParams() *PostAPIRootDomainsUploadSubdomainsTargetNameRootDomainNameParams {
	return &PostAPIRootDomainsUploadSubdomainsTargetNameRootDomainNameParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPostAPIRootDomainsUploadSubdomainsTargetNameRootDomainNameParamsWithTimeout creates a new PostAPIRootDomainsUploadSubdomainsTargetNameRootDomainNameParams object
// with the ability to set a timeout on a request.
func NewPostAPIRootDomainsUploadSubdomainsTargetNameRootDomainNameParamsWithTimeout(timeout time.Duration) *PostAPIRootDomainsUploadSubdomainsTargetNameRootDomainNameParams {
	return &PostAPIRootDomainsUploadSubdomainsTargetNameRootDomainNameParams{
		timeout: timeout,
	}
}

// NewPostAPIRootDomainsUploadSubdomainsTargetNameRootDomainNameParamsWithContext creates a new PostAPIRootDomainsUploadSubdomainsTargetNameRootDomainNameParams object
// with the ability to set a context for a request.
func NewPostAPIRootDomainsUploadSubdomainsTargetNameRootDomainNameParamsWithContext(ctx context.Context) *PostAPIRootDomainsUploadSubdomainsTargetNameRootDomainNameParams {
	return &PostAPIRootDomainsUploadSubdomainsTargetNameRootDomainNameParams{
		Context: ctx,
	}
}

// NewPostAPIRootDomainsUploadSubdomainsTargetNameRootDomainNameParamsWithHTTPClient creates a new PostAPIRootDomainsUploadSubdomainsTargetNameRootDomainNameParams object
// with the ability to set a custom HTTPClient for a request.
func NewPostAPIRootDomainsUploadSubdomainsTargetNameRootDomainNameParamsWithHTTPClient(client *http.Client) *PostAPIRootDomainsUploadSubdomainsTargetNameRootDomainNameParams {
	return &PostAPIRootDomainsUploadSubdomainsTargetNameRootDomainNameParams{
		HTTPClient: client,
	}
}

/* PostAPIRootDomainsUploadSubdomainsTargetNameRootDomainNameParams contains all the parameters to send to the API endpoint
   for the post API root domains upload subdomains target name root domain name operation.

   Typically these are written to a http.Request.
*/
type PostAPIRootDomainsUploadSubdomainsTargetNameRootDomainNameParams struct {

	// File.
	//
	// Format: binary
	File io.ReadCloser

	// RootDomainName.
	RootDomainName string

	// TargetName.
	TargetName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the post API root domains upload subdomains target name root domain name params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostAPIRootDomainsUploadSubdomainsTargetNameRootDomainNameParams) WithDefaults() *PostAPIRootDomainsUploadSubdomainsTargetNameRootDomainNameParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the post API root domains upload subdomains target name root domain name params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostAPIRootDomainsUploadSubdomainsTargetNameRootDomainNameParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the post API root domains upload subdomains target name root domain name params
func (o *PostAPIRootDomainsUploadSubdomainsTargetNameRootDomainNameParams) WithTimeout(timeout time.Duration) *PostAPIRootDomainsUploadSubdomainsTargetNameRootDomainNameParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post API root domains upload subdomains target name root domain name params
func (o *PostAPIRootDomainsUploadSubdomainsTargetNameRootDomainNameParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post API root domains upload subdomains target name root domain name params
func (o *PostAPIRootDomainsUploadSubdomainsTargetNameRootDomainNameParams) WithContext(ctx context.Context) *PostAPIRootDomainsUploadSubdomainsTargetNameRootDomainNameParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post API root domains upload subdomains target name root domain name params
func (o *PostAPIRootDomainsUploadSubdomainsTargetNameRootDomainNameParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post API root domains upload subdomains target name root domain name params
func (o *PostAPIRootDomainsUploadSubdomainsTargetNameRootDomainNameParams) WithHTTPClient(client *http.Client) *PostAPIRootDomainsUploadSubdomainsTargetNameRootDomainNameParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post API root domains upload subdomains target name root domain name params
func (o *PostAPIRootDomainsUploadSubdomainsTargetNameRootDomainNameParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFile adds the file to the post API root domains upload subdomains target name root domain name params
func (o *PostAPIRootDomainsUploadSubdomainsTargetNameRootDomainNameParams) WithFile(file io.ReadCloser) *PostAPIRootDomainsUploadSubdomainsTargetNameRootDomainNameParams {
	o.SetFile(file)
	return o
}

// SetFile adds the file to the post API root domains upload subdomains target name root domain name params
func (o *PostAPIRootDomainsUploadSubdomainsTargetNameRootDomainNameParams) SetFile(file io.ReadCloser) {
	o.File = file
}

// WithRootDomainName adds the rootDomainName to the post API root domains upload subdomains target name root domain name params
func (o *PostAPIRootDomainsUploadSubdomainsTargetNameRootDomainNameParams) WithRootDomainName(rootDomainName string) *PostAPIRootDomainsUploadSubdomainsTargetNameRootDomainNameParams {
	o.SetRootDomainName(rootDomainName)
	return o
}

// SetRootDomainName adds the rootDomainName to the post API root domains upload subdomains target name root domain name params
func (o *PostAPIRootDomainsUploadSubdomainsTargetNameRootDomainNameParams) SetRootDomainName(rootDomainName string) {
	o.RootDomainName = rootDomainName
}

// WithTargetName adds the targetName to the post API root domains upload subdomains target name root domain name params
func (o *PostAPIRootDomainsUploadSubdomainsTargetNameRootDomainNameParams) WithTargetName(targetName string) *PostAPIRootDomainsUploadSubdomainsTargetNameRootDomainNameParams {
	o.SetTargetName(targetName)
	return o
}

// SetTargetName adds the targetName to the post API root domains upload subdomains target name root domain name params
func (o *PostAPIRootDomainsUploadSubdomainsTargetNameRootDomainNameParams) SetTargetName(targetName string) {
	o.TargetName = targetName
}

// WriteToRequest writes these params to a swagger request
func (o *PostAPIRootDomainsUploadSubdomainsTargetNameRootDomainNameParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.File != nil {

		// form param file
		var frFile io.ReadCloser
		buf := new(bytes.Buffer)
		if o.File != nil {
			buf.ReadFrom(frFile)
		}
		newStr := buf.String()
		if newStr != "" {
			if err := r.SetFormParam("file", newStr); err != nil {
				return err
			}
		}
	}

	// path param rootDomainName
	if err := r.SetPathParam("rootDomainName", o.RootDomainName); err != nil {
		return err
	}

	// path param targetName
	if err := r.SetPathParam("targetName", o.TargetName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
