// Code generated by go-swagger; DO NOT EDIT.

package notes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new notes API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for notes API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	PostAPINotesRootdomainTargetNameRootDomainName(params *PostAPINotesRootdomainTargetNameRootDomainNameParams, authInfo runtime.ClientAuthInfoWriter) (*PostAPINotesRootdomainTargetNameRootDomainNameOK, error)

	PostAPINotesSubdomainTargetNameRootDomainNameSubdomainName(params *PostAPINotesSubdomainTargetNameRootDomainNameSubdomainNameParams, authInfo runtime.ClientAuthInfoWriter) (*PostAPINotesSubdomainTargetNameRootDomainNameSubdomainNameOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  PostAPINotesRootdomainTargetNameRootDomainName post API notes rootdomain target name root domain name API
*/
func (a *Client) PostAPINotesRootdomainTargetNameRootDomainName(params *PostAPINotesRootdomainTargetNameRootDomainNameParams, authInfo runtime.ClientAuthInfoWriter) (*PostAPINotesRootdomainTargetNameRootDomainNameOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostAPINotesRootdomainTargetNameRootDomainNameParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostAPINotesRootdomainTargetNameRootDomainName",
		Method:             "POST",
		PathPattern:        "/api/Notes/rootdomain/{targetName}/{rootDomainName}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json", "text/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PostAPINotesRootdomainTargetNameRootDomainNameReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostAPINotesRootdomainTargetNameRootDomainNameOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostAPINotesRootdomainTargetNameRootDomainName: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostAPINotesSubdomainTargetNameRootDomainNameSubdomainName post API notes subdomain target name root domain name subdomain name API
*/
func (a *Client) PostAPINotesSubdomainTargetNameRootDomainNameSubdomainName(params *PostAPINotesSubdomainTargetNameRootDomainNameSubdomainNameParams, authInfo runtime.ClientAuthInfoWriter) (*PostAPINotesSubdomainTargetNameRootDomainNameSubdomainNameOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostAPINotesSubdomainTargetNameRootDomainNameSubdomainNameParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostAPINotesSubdomainTargetNameRootDomainNameSubdomainName",
		Method:             "POST",
		PathPattern:        "/api/Notes/subdomain/{targetName}/{rootDomainName}/{subdomainName}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json", "text/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PostAPINotesSubdomainTargetNameRootDomainNameSubdomainNameReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostAPINotesSubdomainTargetNameRootDomainNameSubdomainNameOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostAPINotesSubdomainTargetNameRootDomainNameSubdomainName: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
