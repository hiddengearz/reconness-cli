// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/hiddengearz/reconness-cli/sdk/client/accounts"
	"github.com/hiddengearz/reconness-cli/sdk/client/agents"
	"github.com/hiddengearz/reconness-cli/sdk/client/auth"
	"github.com/hiddengearz/reconness-cli/sdk/client/categories"
	"github.com/hiddengearz/reconness-cli/sdk/client/labels"
	"github.com/hiddengearz/reconness-cli/sdk/client/notes"
	"github.com/hiddengearz/reconness-cli/sdk/client/references"
	"github.com/hiddengearz/reconness-cli/sdk/client/root_domains"
	"github.com/hiddengearz/reconness-cli/sdk/client/subdomains"
	"github.com/hiddengearz/reconness-cli/sdk/client/targets"
)

// Default reconness API HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "recon.hiddengearz.com"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"http"}

// NewHTTPClient creates a new reconness API HTTP client.
func NewHTTPClient(formats strfmt.Registry) *ReconnessAPI {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new reconness API HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *ReconnessAPI {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new reconness API client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *ReconnessAPI {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(ReconnessAPI)
	cli.Transport = transport
	cli.Accounts = accounts.New(transport, formats)
	cli.Agents = agents.New(transport, formats)
	cli.Auth = auth.New(transport, formats)
	cli.Categories = categories.New(transport, formats)
	cli.Labels = labels.New(transport, formats)
	cli.Notes = notes.New(transport, formats)
	cli.References = references.New(transport, formats)
	cli.RootDomains = root_domains.New(transport, formats)
	cli.Subdomains = subdomains.New(transport, formats)
	cli.Targets = targets.New(transport, formats)
	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// ReconnessAPI is a client for reconness API
type ReconnessAPI struct {
	Accounts accounts.ClientService

	Agents agents.ClientService

	Auth auth.ClientService

	Categories categories.ClientService

	Labels labels.ClientService

	Notes notes.ClientService

	References references.ClientService

	RootDomains root_domains.ClientService

	Subdomains subdomains.ClientService

	Targets targets.ClientService

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *ReconnessAPI) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport
	c.Accounts.SetTransport(transport)
	c.Agents.SetTransport(transport)
	c.Auth.SetTransport(transport)
	c.Categories.SetTransport(transport)
	c.Labels.SetTransport(transport)
	c.Notes.SetTransport(transport)
	c.References.SetTransport(transport)
	c.RootDomains.SetTransport(transport)
	c.Subdomains.SetTransport(transport)
	c.Targets.SetTransport(transport)
}
