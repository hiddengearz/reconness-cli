// Code generated by go-swagger; DO NOT EDIT.

package subdomains

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetAPISubdomainsTargetNameRootDomainNameSubdomainNameParams creates a new GetAPISubdomainsTargetNameRootDomainNameSubdomainNameParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetAPISubdomainsTargetNameRootDomainNameSubdomainNameParams() *GetAPISubdomainsTargetNameRootDomainNameSubdomainNameParams {
	return &GetAPISubdomainsTargetNameRootDomainNameSubdomainNameParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetAPISubdomainsTargetNameRootDomainNameSubdomainNameParamsWithTimeout creates a new GetAPISubdomainsTargetNameRootDomainNameSubdomainNameParams object
// with the ability to set a timeout on a request.
func NewGetAPISubdomainsTargetNameRootDomainNameSubdomainNameParamsWithTimeout(timeout time.Duration) *GetAPISubdomainsTargetNameRootDomainNameSubdomainNameParams {
	return &GetAPISubdomainsTargetNameRootDomainNameSubdomainNameParams{
		timeout: timeout,
	}
}

// NewGetAPISubdomainsTargetNameRootDomainNameSubdomainNameParamsWithContext creates a new GetAPISubdomainsTargetNameRootDomainNameSubdomainNameParams object
// with the ability to set a context for a request.
func NewGetAPISubdomainsTargetNameRootDomainNameSubdomainNameParamsWithContext(ctx context.Context) *GetAPISubdomainsTargetNameRootDomainNameSubdomainNameParams {
	return &GetAPISubdomainsTargetNameRootDomainNameSubdomainNameParams{
		Context: ctx,
	}
}

// NewGetAPISubdomainsTargetNameRootDomainNameSubdomainNameParamsWithHTTPClient creates a new GetAPISubdomainsTargetNameRootDomainNameSubdomainNameParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetAPISubdomainsTargetNameRootDomainNameSubdomainNameParamsWithHTTPClient(client *http.Client) *GetAPISubdomainsTargetNameRootDomainNameSubdomainNameParams {
	return &GetAPISubdomainsTargetNameRootDomainNameSubdomainNameParams{
		HTTPClient: client,
	}
}

/* GetAPISubdomainsTargetNameRootDomainNameSubdomainNameParams contains all the parameters to send to the API endpoint
   for the get API subdomains target name root domain name subdomain name operation.

   Typically these are written to a http.Request.
*/
type GetAPISubdomainsTargetNameRootDomainNameSubdomainNameParams struct {

	// RootDomainName.
	RootDomainName string

	// SubdomainName.
	SubdomainName string

	// TargetName.
	TargetName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get API subdomains target name root domain name subdomain name params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetAPISubdomainsTargetNameRootDomainNameSubdomainNameParams) WithDefaults() *GetAPISubdomainsTargetNameRootDomainNameSubdomainNameParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get API subdomains target name root domain name subdomain name params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetAPISubdomainsTargetNameRootDomainNameSubdomainNameParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get API subdomains target name root domain name subdomain name params
func (o *GetAPISubdomainsTargetNameRootDomainNameSubdomainNameParams) WithTimeout(timeout time.Duration) *GetAPISubdomainsTargetNameRootDomainNameSubdomainNameParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get API subdomains target name root domain name subdomain name params
func (o *GetAPISubdomainsTargetNameRootDomainNameSubdomainNameParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get API subdomains target name root domain name subdomain name params
func (o *GetAPISubdomainsTargetNameRootDomainNameSubdomainNameParams) WithContext(ctx context.Context) *GetAPISubdomainsTargetNameRootDomainNameSubdomainNameParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get API subdomains target name root domain name subdomain name params
func (o *GetAPISubdomainsTargetNameRootDomainNameSubdomainNameParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get API subdomains target name root domain name subdomain name params
func (o *GetAPISubdomainsTargetNameRootDomainNameSubdomainNameParams) WithHTTPClient(client *http.Client) *GetAPISubdomainsTargetNameRootDomainNameSubdomainNameParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get API subdomains target name root domain name subdomain name params
func (o *GetAPISubdomainsTargetNameRootDomainNameSubdomainNameParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithRootDomainName adds the rootDomainName to the get API subdomains target name root domain name subdomain name params
func (o *GetAPISubdomainsTargetNameRootDomainNameSubdomainNameParams) WithRootDomainName(rootDomainName string) *GetAPISubdomainsTargetNameRootDomainNameSubdomainNameParams {
	o.SetRootDomainName(rootDomainName)
	return o
}

// SetRootDomainName adds the rootDomainName to the get API subdomains target name root domain name subdomain name params
func (o *GetAPISubdomainsTargetNameRootDomainNameSubdomainNameParams) SetRootDomainName(rootDomainName string) {
	o.RootDomainName = rootDomainName
}

// WithSubdomainName adds the subdomainName to the get API subdomains target name root domain name subdomain name params
func (o *GetAPISubdomainsTargetNameRootDomainNameSubdomainNameParams) WithSubdomainName(subdomainName string) *GetAPISubdomainsTargetNameRootDomainNameSubdomainNameParams {
	o.SetSubdomainName(subdomainName)
	return o
}

// SetSubdomainName adds the subdomainName to the get API subdomains target name root domain name subdomain name params
func (o *GetAPISubdomainsTargetNameRootDomainNameSubdomainNameParams) SetSubdomainName(subdomainName string) {
	o.SubdomainName = subdomainName
}

// WithTargetName adds the targetName to the get API subdomains target name root domain name subdomain name params
func (o *GetAPISubdomainsTargetNameRootDomainNameSubdomainNameParams) WithTargetName(targetName string) *GetAPISubdomainsTargetNameRootDomainNameSubdomainNameParams {
	o.SetTargetName(targetName)
	return o
}

// SetTargetName adds the targetName to the get API subdomains target name root domain name subdomain name params
func (o *GetAPISubdomainsTargetNameRootDomainNameSubdomainNameParams) SetTargetName(targetName string) {
	o.TargetName = targetName
}

// WriteToRequest writes these params to a swagger request
func (o *GetAPISubdomainsTargetNameRootDomainNameSubdomainNameParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param rootDomainName
	if err := r.SetPathParam("rootDomainName", o.RootDomainName); err != nil {
		return err
	}

	// path param subdomainName
	if err := r.SetPathParam("subdomainName", o.SubdomainName); err != nil {
		return err
	}

	// path param targetName
	if err := r.SetPathParam("targetName", o.TargetName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
